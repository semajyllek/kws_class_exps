CELL 4: Measure GSC Energy Profile (Run Once - 5-10 min)
---------------------------------------------------------
from measure_gsc_energy import measure_gsc_energy, load_gsc_energy_profile
from pathlib import Path
import os

# Ensure synthetic directory exists
if 'COLAB_SYNTHETIC_DIR' not in os.environ:
    project_dir = '/content/drive/MyDrive/kws_class_experiments'
    os.environ['COLAB_SYNTHETIC_DIR'] = f"{project_dir}/synthetic_datasets"
    os.makedirs(os.environ['COLAB_SYNTHETIC_DIR'], exist_ok=True)

profile_path = f"{os.environ['COLAB_SYNTHETIC_DIR']}/gsc_energy_profile.json"

# Check if profile already exists
if Path(profile_path).exists():
    print("✓ GSC energy profile already exists!")
    profile = load_gsc_energy_profile(profile_path)
    print(f"\n  Target RMS: {profile['recommended_target_rms']:.6f}")
    print(f"  Mean Energy: {profile['energy']['mean']:.2f}")
    print(f"  Based on {profile['n_samples_measured']} GSC samples")
    print("\n✓ Synthetic audio will be normalized to match this profile")
    print("Skip to Cell 5.")
else:
    print("Measuring GSC energy profile...")
    print("This analyzes 5,000 GSC samples to measure typical audio energy")
    print("Takes 5-10 minutes but only needs to be done once\n")
    
    # Measure and save profile
    profile = measure_gsc_energy(
        output_file=profile_path,
        dataset_size='medium'  # Sample 5K GSC samples
    )
    
    print("\n" + "="*60)
    print("✓ Energy profile saved!")
    print("="*60)
    print("\nThis profile will be automatically used to ensure synthetic")
    print("audio has the same energy distribution as real GSC samples.")
    print("\nThis prevents the model from learning energy shortcuts instead")
    print("of actual speech patterns - critical for valid experiments!")


CELL 5: Check if Comprehensive Dataset Exists
----------------------------------------------
from synthetic_data_generator import check_dataset_exists
import os

dataset_path = f"{os.environ['COLAB_SYNTHETIC_DIR']}/gsc_synthetic_comprehensive"
result = check_dataset_exists(dataset_path)

if result['exists']:
    print("✓ Comprehensive synthetic dataset already exists!")
    print(f"Total samples: {result['info']['total_samples']}")
    print(f"Samples per keyword: {result['info']['samples_per_keyword']}")
    print("\nSkip Cell 6 and go directly to Cell 7.")
else:
    print("✗ Dataset not found. Run Cell 6 to generate it.")
